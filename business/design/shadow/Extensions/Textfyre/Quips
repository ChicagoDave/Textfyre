Version 2 of Quips by Textfyre begins here.

"Quips that represent nodes in a conversation tree -- really, a conversation network -- and allow the player to select from a list of responses."

Use authorial modesty.

Include Triggers by Textfyre.

Part 1 - Definitions

Chapter 1 - Standard quips

A quip is a kind of trigger.

The current conversation is a list of objects [quips] that varies.
When play begins:
	now the current conversation is {}.

The current conversationalist is a person that varies.

The menu option currently being displayed is a number that varies;

The chosen opening gambit is a quip that varies.

A quip has a text called the menu text.
A quip has a text called the display text.
A quip has a text called the repeat text.
A quip has a list of objects [quips] called the response.

The null quip is a quip.

Chapter 2 - Transition quips

A transitional quip is a kind of quip.
A transitional quip has a quip called the following quip.
The response of a transitional quip is always {}.

Chapter 3 - Firing activity

Rule for firing an unfired quip (called q):
	if the display text of q is not "",
		say the display text of q, paragraph break;

Rule for firing a fired quip (called q):
	if the repeat text of q is not "",
		say the repeat text of q, paragraph break;
	otherwise say the display text of q, paragraph break;

Chapter 4 - Conversation Initiation

Initiating conversation with something is an activity.

The first before initiating conversation with rule:
	change the chosen opening gambit to nothing;

After initiating conversation with a thing (called the new person):
	if the chosen opening gambit is not nothing,
		now the current conversationalist is the new person;

Chapter 5 - Conversation termination

Terminating conversation with something is an activity.

Rule for terminating conversation with a thing:
	now the current conversationalist is the player.

Last after terminating conversation with:
	select the conversation channel;
	say "<TopicList />";
	select the main channel;

Part 2 - Verbs

Talking to is an action applying to one visible thing. 

Understand "talk to [someone]" as talking to.

Check talking to the player:
	say "Second sign of madness." instead;

Check talking to the current conversationalist:
	say "You are already talking to [the noun]." instead.

Carry out talking to someone:
	carry out the initiating conversation with activity with the noun;

Report talking to someone:
	if the chosen opening gambit is nothing,
		say "There is no reply." instead;
	start conversation with the noun on the chosen opening gambit, even if not present;
	
Part 3 - Menu options

Chapter 1 - Menu selection

Selecting menu option is an action applying to one number.
Understand "[number]" as selecting menu option when the current conversationalist is not the player and the number of entries in the current conversation is greater than 0.

Check selecting menu option:
	if the current conversationalist is the player begin;
		say "You are not talking to anyone." instead;
	end if;

Check selecting menu option:
	if the number of entries in the current conversation is 0 begin;
		say "You are not talking to anyone." instead;
	end if;

Check selecting menu option:
	if the number understood is less than 1 begin;
		say "No such option." instead;
	end if;
	if the number understood is greater than the number of entries in the current conversation begin;
		say "No such option." instead;
	end if;

Report selecting menu option:
	let n be the number understood;
	let q be entry n of the current conversation;
	carry out the firing activity with q;
	if the current conversationalist is not the player [e.g. because firing the quip has ended conversation] begin;
		carry out the populating activity with q;
		if the number of entries in the current conversation is greater than 0 begin;
			display the menu;
		otherwise;
			carry out the terminating conversation with activity with the current conversationalist;
		end if;
	end if;

Populating something is an activity.

Rule for populating a quip (called q):
	change the current conversation to the response of q;

Last after populating a transitional quip (called tq):
	let the real destination be the following quip of tq;
	carry out the firing activity with the real destination;
	carry out the populating activity with the real destination;

Chapter 2 - Viewing the menu

Section 1 - The Game Action

Viewing the menu is an action out of world applying to nothing.
Understand "menu" as viewing the menu.

Displaying the menu is an activity.
Printing the menu text of something is an activity.

Check viewing the menu:
	if the current conversationalist is the player begin;
		say "You are not talking to anyone." instead;
	end if;

Check viewing the menu:
	if the number of entries in the current conversation is 0 begin;
		say "You are not talking to anyone." instead;
	end if;

Report viewing the menu:
	display the menu;

To display the menu:
	carry out the displaying the menu activity;

Section 2 - Menu display loop

First before displaying the menu rule:
	select the conversation channel;

Before displaying the menu:
	say "<TopicList Character='[The Current Conversationalist]'>[line break]";

Rule for displaying the menu:
	change the menu option currently being displayed to 1;
	repeat with X running through the current conversation begin;
		carry out the printing the menu text activity with X;
		increment the menu option currently being displayed by 1;
	end repeat;

After displaying the menu:
	say "</TopicList>";

The last after displaying the menu rule:
	select the main channel;

Section 3 - Menu option display

Before printing the menu text of a quip:
	say "<Topic ID='[the menu option currently being displayed]'>";

Before printing the menu text of a quip:
	say "[the menu option currently being displayed]. ";

Rule for printing the menu text of a quip (called q):
	say menu text of q;

After printing the menu text of a quip:
	say "</Topic>";

After printing the menu text of a quip:
	say line break;

Part 4 - Starting conversations pre-emptively

To start conversation with (the certain someone - a person) on (q - a thing), even if not present:
	if the location of the certain someone is the location or even if not present begin;
		now the current conversationalist is the certain someone;
		carry out the firing activity with q;
		carry out the populating activity with q;
		if the number of entries in the current conversation is greater than 0 begin;
			display the menu;
		otherwise;
			carry out the terminating conversation with activity with the current conversationalist;
		end if;
	end if;

Part 5 - Terminating conversations automatically 

Every turn (this is the terminating conversations with absent people rule):
	if the current conversationalist is not in the location begin;
		carry out the terminating conversation with activity with the current conversationalist;
	end if;

Part 6 - Fixing misleading parser errors

To TF_QUIP_fix_parser:
	(- etype = STUCK_PE; -)

Before printing a parser error when the parser error is didn't understand that number:
	TF_QUIP_fix_parser;

Part X - Debugging - Not for release

After printing the name of an unfired quip:
	say " (unfired)"

After printing the name of an fired quip:
	say " *FIRED*"

Quips ends here.

---- DOCUMENTATION ---- 

Quips is an implementation of the Miradania series conversation quips specification. It defines a new kind, "quip", which represents a node in the conversation network. 

It provides two new actions, "talk to" by which the player may attempt to initiate conversation with a character in the game, and "menu" which displays the list of available responses to the most recently-fired quip.

"Firing" a quip happens when that quip is selected by the player, or when a character in the game decides to initiate conversation with the player (or in other circumstances, see below.) If the quip has not been fired before, then the "display text" of the quip is displayed. If the quip *has* been fired before, then the "repeat text" of the quip is displayed, if it has one (and if not, the display text is displayed as normal.)

After a quip is fired, the available responses are assembled and listed to the player. If there are no available responses, the conversation is terminated. The "response" property of a quip holds the list of options that the player should be given: it is an Inform list of objects, and each object in the list must be a quip.

	EG1 is a quip. The display text is "You wave at Bobby. 'Hi!' Bobby waves back sheepishly."

	The response of EG1 is { EG2, EG3, EG4 }.

	EG2 is a quip. The menu text is "What are you doing here?" 
	EG3 is a quip. The menu text is "What's that you're holding?"
	EG4 is a quip. The menu text is "Where are your trousers?"

And so on, which might yield in-game output as follows:

	You wave at Bobby. 'Hi!' Bobby waves back, sheepishly.

	1. What are you doing here?
	2. What's that you're holding?
	3. Where are your trousers?

(The order of quips as given in the response property is preserved in the menu.)

It is often desirable to only display certain quip options in certain circumstances. The process of deciding which quips are to be displayed in the response list is implemented in the "populating" activity - a name which was chosen more for reasons of brevity than of descriptive clarity:

	After populating EG1:
		if Bobby does not carry the mysterious smelly thing,
			remove EG3 from the current conversation;
		if Bobby is wearing the trousers,
			remove EG4 from the current conversation;

A player can only be in conversation with one game character at a time, although there may be several other people in the room. "The current conversationalist" holds this value. If the player is not presently in conversation with anyone, then the "current conversationalist" evaluates to the player object itself.

When the player types "talk to Bobby" then - assuming no before rules, instead rules, or standard check rules interfere - the "initiating conversation" activity is carried out. The initiating conversation with rules have a chance to set the global value "the chosen opening gambit" to a quip. In practice, all this means that setting the starting quip for an NPC usually looks something like this:

	Rule for initiating conversation with Bobby:
		change the chosen opening gambit to EG1.

Although this:

	After talking to Bobby:
		start conversation with Bobby on EG1;

...works just as well. "Start conversation with someone on some quip" is a convenience phrase which sets the current conversationalist and runs through the firing, populating, and menu viewing activities. It has a phrase option, "even if not present", which bypasses a check for conversationalists being in the same location, and is intended for times when changes to scope have brought distant characters into earshot. 

Technically, this "initiating" activity is called "initiating conversation with" - and unlike "of" which is automatically stripped from activity names, "with" is not a recognised I7 preposition. It is only important to know this when carrying out the activity manually:

	carry out the initiating conversation with activity with such-and-such person.

Rather than

	carry out the initiating conversation activity with such-and-such. [doesn't work, no such activity.]

A minor inconvenience but not one that is likely to have any great impact - the initiating activity is rarely generated outside of the extension itself. However the same caveat also applies to the "terminating conversation with" activity which is symmetrical.

This extension also provides a special kind of quip called a "transitional quip". These are an exception to the rule that a menu of options is displayed after a quip is fired: in fact, the response list of a transitional quip is never consulted. Instead, the "following quip" property should be set to the name of another quip which will be seamlessly fired immediately after this one.

	EG5 is a transitional quip. The menu text is "What's that dog doing?"
	EG6 is a transitional quip. The menu text is "What color's your kettle?"

	The following quip of EG5 is EG7. The following quip of EG6 is EG7.

	EG7 is a quip. The display text is "'Never mind about that', says Bobby."

I am aware of the adage, "never get programmers to write documentation," and although I'm trying my best, I appreciate that these notes are probably obscure, incomplete, impenetrable, and go into too much detail over unimportant things, (and not enough detail over important ones.) Of course I can easily hand-wave and say look to the Jack & The Secret Letter source for examples, but if a proper set of examples would be more helpful I'd be happy to oblige.
