/*
 *  DO NOT EDIT THIS CLASS.
 * 
 *  This class is generated by a tool and should not be edited. If you need to change the functionality of 
 *  this class, you should discuss your changes with the team and they should be implemented in the
 *  appropriate template.
 *  
 */
using System;
using System.Data;
using System.Collections.Generic;
using #systemNamespace#.Common.BusinessLayer;

namespace #rootNamespace#.BusinessLayer {

    [Serializable()]
    public class #spName#Collection : List<#spName#> {
        private bool _isCollectionDirty;

        public bool IsCollectionDirty { get { return _isCollectionDirty; } set { _isCollectionDirty = value; } }

        new public void Add(#spName# #spName#) {
            base.Add(#spName#);
            _isCollectionDirty = true;
        }

        public void Add(#spName#Recordset recordset) {
            this.Add(new #spName#(recordset));
        }

        new public void Remove(#spName# #spName#) {
            base.Remove(#spName#);
            _isCollectionDirty = true;
        }

        public void Fill(List<#spName#Recordset> #spName#Recs) {
            this.Clear();            
            foreach (#spName#Recordset rec in #spName#Recs)
                Add((#spName#Recordset)rec.Clone());            
        }

        public void Sort(#rootNamespace#.DataLayer.#spName#Fields sortField, SortDirection sortDirection)
        {
            switch (sortField)
            {
#sortingCases#
            }
        }

        public int PageCount(int pageSize)
        {
            int pageCount = this.Count / pageSize;
            if ((int)(this.Count / pageSize * pageSize) == this.Count)
                return pageCount;
            else
                return pageCount + 1;
        }

        public List<#spName#> GetPage(int pageSize, int pageNumber)
        {
            int beginIndex = ((pageNumber - 1) * pageSize); // start at 0 so pages are offset -1
            int endIndex = beginIndex + pageSize - 1;

            List<#spName#> returnCollection = new List<#spName#>();

            for (int row = beginIndex; row < endIndex; row++)
            {
                returnCollection.Add(this[row]);
            }

            return returnCollection;
        }
    }

}