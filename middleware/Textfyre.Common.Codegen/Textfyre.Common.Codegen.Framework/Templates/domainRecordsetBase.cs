/*
 *  DO NOT EDIT THIS CLASS.
 * 
 *  This class is generated by a tool and should not be edited. If you need to change the functionality of 
 *  this class, you should discuss your changes with the team and they should be implemented in the
 *  appropriate template.
 *  
 */
using System;

namespace #rootNamespace#.BusinessLayer {   
    /// <summary>
    /// #tableName#RecordsetBase class.
    /// </summary>
    [Serializable()]
    public abstract class #tableName#RecordsetBase { 
      #region Members
#privateFields#
      /// <summary>
      /// _isDirty field.
      /// </summary>
      private bool _isDirty = false;
      /// <summary>
      /// _isDeleted field.
      /// </summary>
      private bool _isDeleted = false;
      /// <summary>
      /// _isInserted field.
      /// </summary>
      private bool _isInserted = false;
      #endregion 

      #region Properties
        
#publicProperties#
        
      /// <summary>
      /// Flag for when recordset data has changed.
      /// </summary>
      public bool IsDirty { 
          get { return _isDirty; } 
          set { _isDirty = value; } 
      } 
        
      /// <summary>
      /// Delete flag.
      /// </summary>
      public bool IsDeleted { 
          get { return _isDeleted; } 
          set { _isDeleted = value; } 
      }

      /// <summary>
      /// Insert flag for composite keys only.
      /// </summary>
      public bool IsInserted {
          get { return _isInserted; }
          set { _isInserted = value; }
      }
        
      #endregion 
        
      /// <summary>
      /// Empty constructor.
      /// </summary>
      public #tableName#RecordsetBase() {
      } 

      /// <summary>
      /// Returns a new instance of the current recordset.
      /// </summary>
      /// <returns></returns>
      public virtual #tableName#Recordset Clone() {
          #tableName#Recordset new#tableName#RS = new #tableName#Recordset(); 
          #cloneSettings#
          new#tableName#RS.IsDirty = _isDirty;
          new#tableName#RS.IsDeleted = _isDeleted;
          return new#tableName#RS; 
      }

      /// <summary>
      /// Sets the identity column.
      /// </summary>
      /// <param name="IdentityValue"></param>
#generatedSetIdentity#

    } 
} 