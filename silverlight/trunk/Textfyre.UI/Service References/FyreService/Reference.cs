//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40624.0
// 
namespace Textfyre.UI.FyreService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://textfyre.com/", ConfigurationName="FyreService.FyreServiceSoap")]
    public interface FyreServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://textfyre.com/LogCommand", ReplyAction="*")]
        System.IAsyncResult BeginLogCommand(Textfyre.UI.FyreService.LogCommandRequest request, System.AsyncCallback callback, object asyncState);
        
        Textfyre.UI.FyreService.LogCommandResponse EndLogCommand(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://textfyre.com/LogNotes", ReplyAction="*")]
        System.IAsyncResult BeginLogNotes(Textfyre.UI.FyreService.LogNotesRequest request, System.AsyncCallback callback, object asyncState);
        
        Textfyre.UI.FyreService.LogNotesResponse EndLogNotes(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogCommandRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LogCommand", Namespace="http://textfyre.com/", Order=0)]
        public Textfyre.UI.FyreService.LogCommandRequestBody Body;
        
        public LogCommandRequest() {
        }
        
        public LogCommandRequest(Textfyre.UI.FyreService.LogCommandRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://textfyre.com/")]
    public partial class LogCommandRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int storyId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string sessionId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int turn;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string location;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string school;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string gender;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int age;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string city;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string state;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string commandText;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string responseText;
        
        public LogCommandRequestBody() {
        }
        
        public LogCommandRequestBody(int storyId, string sessionId, int turn, string location, string school, string gender, int age, string city, string state, string commandText, string responseText) {
            this.storyId = storyId;
            this.sessionId = sessionId;
            this.turn = turn;
            this.location = location;
            this.school = school;
            this.gender = gender;
            this.age = age;
            this.city = city;
            this.state = state;
            this.commandText = commandText;
            this.responseText = responseText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogCommandResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LogCommandResponse", Namespace="http://textfyre.com/", Order=0)]
        public Textfyre.UI.FyreService.LogCommandResponseBody Body;
        
        public LogCommandResponse() {
        }
        
        public LogCommandResponse(Textfyre.UI.FyreService.LogCommandResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class LogCommandResponseBody {
        
        public LogCommandResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogNotesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LogNotes", Namespace="http://textfyre.com/", Order=0)]
        public Textfyre.UI.FyreService.LogNotesRequestBody Body;
        
        public LogNotesRequest() {
        }
        
        public LogNotesRequest(Textfyre.UI.FyreService.LogNotesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://textfyre.com/")]
    public partial class LogNotesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int storyId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string sessionId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int turn;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string location;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string school;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string gender;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int age;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string city;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string state;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string notes;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string notesBy;
        
        public LogNotesRequestBody() {
        }
        
        public LogNotesRequestBody(int storyId, string sessionId, int turn, string location, string school, string gender, int age, string city, string state, string notes, string notesBy) {
            this.storyId = storyId;
            this.sessionId = sessionId;
            this.turn = turn;
            this.location = location;
            this.school = school;
            this.gender = gender;
            this.age = age;
            this.city = city;
            this.state = state;
            this.notes = notes;
            this.notesBy = notesBy;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogNotesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LogNotesResponse", Namespace="http://textfyre.com/", Order=0)]
        public Textfyre.UI.FyreService.LogNotesResponseBody Body;
        
        public LogNotesResponse() {
        }
        
        public LogNotesResponse(Textfyre.UI.FyreService.LogNotesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class LogNotesResponseBody {
        
        public LogNotesResponseBody() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface FyreServiceSoapChannel : Textfyre.UI.FyreService.FyreServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class FyreServiceSoapClient : System.ServiceModel.ClientBase<Textfyre.UI.FyreService.FyreServiceSoap>, Textfyre.UI.FyreService.FyreServiceSoap {
        
        private BeginOperationDelegate onBeginLogCommandDelegate;
        
        private EndOperationDelegate onEndLogCommandDelegate;
        
        private System.Threading.SendOrPostCallback onLogCommandCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogNotesDelegate;
        
        private EndOperationDelegate onEndLogNotesDelegate;
        
        private System.Threading.SendOrPostCallback onLogNotesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public FyreServiceSoapClient() {
        }
        
        public FyreServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FyreServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FyreServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FyreServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogCommandCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogNotesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Textfyre.UI.FyreService.FyreServiceSoap.BeginLogCommand(Textfyre.UI.FyreService.LogCommandRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogCommand(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginLogCommand(int storyId, string sessionId, int turn, string location, string school, string gender, int age, string city, string state, string commandText, string responseText, System.AsyncCallback callback, object asyncState) {
            Textfyre.UI.FyreService.LogCommandRequest inValue = new Textfyre.UI.FyreService.LogCommandRequest();
            inValue.Body = new Textfyre.UI.FyreService.LogCommandRequestBody();
            inValue.Body.storyId = storyId;
            inValue.Body.sessionId = sessionId;
            inValue.Body.turn = turn;
            inValue.Body.location = location;
            inValue.Body.school = school;
            inValue.Body.gender = gender;
            inValue.Body.age = age;
            inValue.Body.city = city;
            inValue.Body.state = state;
            inValue.Body.commandText = commandText;
            inValue.Body.responseText = responseText;
            return ((Textfyre.UI.FyreService.FyreServiceSoap)(this)).BeginLogCommand(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Textfyre.UI.FyreService.LogCommandResponse Textfyre.UI.FyreService.FyreServiceSoap.EndLogCommand(System.IAsyncResult result) {
            return base.Channel.EndLogCommand(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndLogCommand(System.IAsyncResult result) {
            Textfyre.UI.FyreService.LogCommandResponse retVal = ((Textfyre.UI.FyreService.FyreServiceSoap)(this)).EndLogCommand(result);
        }
        
        private System.IAsyncResult OnBeginLogCommand(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int storyId = ((int)(inValues[0]));
            string sessionId = ((string)(inValues[1]));
            int turn = ((int)(inValues[2]));
            string location = ((string)(inValues[3]));
            string school = ((string)(inValues[4]));
            string gender = ((string)(inValues[5]));
            int age = ((int)(inValues[6]));
            string city = ((string)(inValues[7]));
            string state = ((string)(inValues[8]));
            string commandText = ((string)(inValues[9]));
            string responseText = ((string)(inValues[10]));
            return this.BeginLogCommand(storyId, sessionId, turn, location, school, gender, age, city, state, commandText, responseText, callback, asyncState);
        }
        
        private object[] OnEndLogCommand(System.IAsyncResult result) {
            this.EndLogCommand(result);
            return null;
        }
        
        private void OnLogCommandCompleted(object state) {
            if ((this.LogCommandCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogCommandCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogCommandAsync(int storyId, string sessionId, int turn, string location, string school, string gender, int age, string city, string state, string commandText, string responseText) {
            this.LogCommandAsync(storyId, sessionId, turn, location, school, gender, age, city, state, commandText, responseText, null);
        }
        
        public void LogCommandAsync(int storyId, string sessionId, int turn, string location, string school, string gender, int age, string city, string state, string commandText, string responseText, object userState) {
            if ((this.onBeginLogCommandDelegate == null)) {
                this.onBeginLogCommandDelegate = new BeginOperationDelegate(this.OnBeginLogCommand);
            }
            if ((this.onEndLogCommandDelegate == null)) {
                this.onEndLogCommandDelegate = new EndOperationDelegate(this.OnEndLogCommand);
            }
            if ((this.onLogCommandCompletedDelegate == null)) {
                this.onLogCommandCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogCommandCompleted);
            }
            base.InvokeAsync(this.onBeginLogCommandDelegate, new object[] {
                        storyId,
                        sessionId,
                        turn,
                        location,
                        school,
                        gender,
                        age,
                        city,
                        state,
                        commandText,
                        responseText}, this.onEndLogCommandDelegate, this.onLogCommandCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Textfyre.UI.FyreService.FyreServiceSoap.BeginLogNotes(Textfyre.UI.FyreService.LogNotesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogNotes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginLogNotes(int storyId, string sessionId, int turn, string location, string school, string gender, int age, string city, string state, string notes, string notesBy, System.AsyncCallback callback, object asyncState) {
            Textfyre.UI.FyreService.LogNotesRequest inValue = new Textfyre.UI.FyreService.LogNotesRequest();
            inValue.Body = new Textfyre.UI.FyreService.LogNotesRequestBody();
            inValue.Body.storyId = storyId;
            inValue.Body.sessionId = sessionId;
            inValue.Body.turn = turn;
            inValue.Body.location = location;
            inValue.Body.school = school;
            inValue.Body.gender = gender;
            inValue.Body.age = age;
            inValue.Body.city = city;
            inValue.Body.state = state;
            inValue.Body.notes = notes;
            inValue.Body.notesBy = notesBy;
            return ((Textfyre.UI.FyreService.FyreServiceSoap)(this)).BeginLogNotes(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Textfyre.UI.FyreService.LogNotesResponse Textfyre.UI.FyreService.FyreServiceSoap.EndLogNotes(System.IAsyncResult result) {
            return base.Channel.EndLogNotes(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndLogNotes(System.IAsyncResult result) {
            Textfyre.UI.FyreService.LogNotesResponse retVal = ((Textfyre.UI.FyreService.FyreServiceSoap)(this)).EndLogNotes(result);
        }
        
        private System.IAsyncResult OnBeginLogNotes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int storyId = ((int)(inValues[0]));
            string sessionId = ((string)(inValues[1]));
            int turn = ((int)(inValues[2]));
            string location = ((string)(inValues[3]));
            string school = ((string)(inValues[4]));
            string gender = ((string)(inValues[5]));
            int age = ((int)(inValues[6]));
            string city = ((string)(inValues[7]));
            string state = ((string)(inValues[8]));
            string notes = ((string)(inValues[9]));
            string notesBy = ((string)(inValues[10]));
            return this.BeginLogNotes(storyId, sessionId, turn, location, school, gender, age, city, state, notes, notesBy, callback, asyncState);
        }
        
        private object[] OnEndLogNotes(System.IAsyncResult result) {
            this.EndLogNotes(result);
            return null;
        }
        
        private void OnLogNotesCompleted(object state) {
            if ((this.LogNotesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogNotesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogNotesAsync(int storyId, string sessionId, int turn, string location, string school, string gender, int age, string city, string state, string notes, string notesBy) {
            this.LogNotesAsync(storyId, sessionId, turn, location, school, gender, age, city, state, notes, notesBy, null);
        }
        
        public void LogNotesAsync(int storyId, string sessionId, int turn, string location, string school, string gender, int age, string city, string state, string notes, string notesBy, object userState) {
            if ((this.onBeginLogNotesDelegate == null)) {
                this.onBeginLogNotesDelegate = new BeginOperationDelegate(this.OnBeginLogNotes);
            }
            if ((this.onEndLogNotesDelegate == null)) {
                this.onEndLogNotesDelegate = new EndOperationDelegate(this.OnEndLogNotes);
            }
            if ((this.onLogNotesCompletedDelegate == null)) {
                this.onLogNotesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogNotesCompleted);
            }
            base.InvokeAsync(this.onBeginLogNotesDelegate, new object[] {
                        storyId,
                        sessionId,
                        turn,
                        location,
                        school,
                        gender,
                        age,
                        city,
                        state,
                        notes,
                        notesBy}, this.onEndLogNotesDelegate, this.onLogNotesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Textfyre.UI.FyreService.FyreServiceSoap CreateChannel() {
            return new FyreServiceSoapClientChannel(this);
        }
        
        private class FyreServiceSoapClientChannel : ChannelBase<Textfyre.UI.FyreService.FyreServiceSoap>, Textfyre.UI.FyreService.FyreServiceSoap {
            
            public FyreServiceSoapClientChannel(System.ServiceModel.ClientBase<Textfyre.UI.FyreService.FyreServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginLogCommand(Textfyre.UI.FyreService.LogCommandRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("LogCommand", _args, callback, asyncState);
                return _result;
            }
            
            public Textfyre.UI.FyreService.LogCommandResponse EndLogCommand(System.IAsyncResult result) {
                object[] _args = new object[0];
                Textfyre.UI.FyreService.LogCommandResponse _result = ((Textfyre.UI.FyreService.LogCommandResponse)(base.EndInvoke("LogCommand", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLogNotes(Textfyre.UI.FyreService.LogNotesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("LogNotes", _args, callback, asyncState);
                return _result;
            }
            
            public Textfyre.UI.FyreService.LogNotesResponse EndLogNotes(System.IAsyncResult result) {
                object[] _args = new object[0];
                Textfyre.UI.FyreService.LogNotesResponse _result = ((Textfyre.UI.FyreService.LogNotesResponse)(base.EndInvoke("LogNotes", _args, result)));
                return _result;
            }
        }
    }
}
