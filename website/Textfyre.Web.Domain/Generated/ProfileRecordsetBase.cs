/*
 *  DO NOT EDIT THIS CLASS.
 * 
 *  This class is generated by a tool and should not be edited. If you need to change the functionality of 
 *  this class, you should discuss your changes with the team and they should be implemented in the
 *  appropriate template.
 *  
 */
using System;

namespace Textfyre.TextfyreWeb.BusinessLayer {   
    /// <summary>
    /// ProfileRecordsetBase class.
    /// </summary>
    [Serializable()]
    public abstract class ProfileRecordsetBase { 
      #region Members

			/// <summary>
			/// UserId field.
			/// </summary>
			private Guid _UserId = Guid.Empty;
			/// <summary>
			/// FirstName field.
			/// </summary>
			private string _FirstName;
			/// <summary>
			/// LastName field.
			/// </summary>
			private string _LastName;
			/// <summary>
			/// City field.
			/// </summary>
			private string _City;
			/// <summary>
			/// State field.
			/// </summary>
			private string _State;
			/// <summary>
			/// School field.
			/// </summary>
			private string _School;
			/// <summary>
			/// IsCustomer field.
			/// </summary>
			private bool? _IsCustomer = null;
			/// <summary>
			/// OwnsSecretLetter field.
			/// </summary>
			private bool? _OwnsSecretLetter = null;
			/// <summary>
			/// OwnsShadow field.
			/// </summary>
			private bool? _OwnsShadow = null;
			/// <summary>
			/// OwnsEmpathy field.
			/// </summary>
			private bool? _OwnsEmpathy = null;
			/// <summary>
			/// ValidationId field.
			/// </summary>
			private string _ValidationId;
			/// <summary>
			/// LastActivityDate field.
			/// </summary>
			private DateTime _LastActivityDate;
      /// <summary>
      /// _isDirty field.
      /// </summary>
      private bool _isDirty = false;
      /// <summary>
      /// _isDeleted field.
      /// </summary>
      private bool _isDeleted = false;
      /// <summary>
      /// _isInserted field.
      /// </summary>
      private bool _isInserted = false;
      #endregion 

      #region Properties
        

		public Guid UserId {
			get { return _UserId; }
			set {
				if(_UserId != value) {
					_isDirty = true;
					_UserId = value;
				}
			}
		}

		public string FirstName {
			get { return _FirstName; }
			set {
				if(_FirstName != value) {
					_isDirty = true;
					_FirstName = value;
				}
			}
		}

		public string LastName {
			get { return _LastName; }
			set {
				if(_LastName != value) {
					_isDirty = true;
					_LastName = value;
				}
			}
		}

		public string City {
			get { return _City; }
			set {
				if(_City != value) {
					_isDirty = true;
					_City = value;
				}
			}
		}

		public string State {
			get { return _State; }
			set {
				if(_State != value) {
					_isDirty = true;
					_State = value;
				}
			}
		}

		public string School {
			get { return _School; }
			set {
				if(_School != value) {
					_isDirty = true;
					_School = value;
				}
			}
		}

		public bool? IsCustomer {
			get { return _IsCustomer; }
			set {
				if(_IsCustomer != value) {
					_isDirty = true;
					_IsCustomer = value;
				}
			}
		}

		public bool? OwnsSecretLetter {
			get { return _OwnsSecretLetter; }
			set {
				if(_OwnsSecretLetter != value) {
					_isDirty = true;
					_OwnsSecretLetter = value;
				}
			}
		}

		public bool? OwnsShadow {
			get { return _OwnsShadow; }
			set {
				if(_OwnsShadow != value) {
					_isDirty = true;
					_OwnsShadow = value;
				}
			}
		}

		public bool? OwnsEmpathy {
			get { return _OwnsEmpathy; }
			set {
				if(_OwnsEmpathy != value) {
					_isDirty = true;
					_OwnsEmpathy = value;
				}
			}
		}

		public string ValidationId {
			get { return _ValidationId; }
			set {
				if(_ValidationId != value) {
					_isDirty = true;
					_ValidationId = value;
				}
			}
		}

		public DateTime LastActivityDate {
			get { return _LastActivityDate; }
			set {
				if(_LastActivityDate != value) {
					_isDirty = true;
					_LastActivityDate = value;
				}
			}
		}

        
      /// <summary>
      /// Flag for when recordset data has changed.
      /// </summary>
      public bool IsDirty { 
          get { return _isDirty; } 
          set { _isDirty = value; } 
      } 
        
      /// <summary>
      /// Delete flag.
      /// </summary>
      public bool IsDeleted { 
          get { return _isDeleted; } 
          set { _isDeleted = value; } 
      }

      /// <summary>
      /// Insert flag for composite keys only.
      /// </summary>
      public bool IsInserted {
          get { return _isInserted; }
          set { _isInserted = value; }
      }
        
      #endregion 
        
      /// <summary>
      /// Empty constructor.
      /// </summary>
      public ProfileRecordsetBase() {
      } 

      /// <summary>
      /// Returns a new instance of the current recordset.
      /// </summary>
      /// <returns></returns>
      public virtual ProfileRecordset Clone() {
          ProfileRecordset newProfileRS = new ProfileRecordset(); 
          newProfileRS.UserId = _UserId;
					newProfileRS.FirstName = _FirstName;
					newProfileRS.LastName = _LastName;
					newProfileRS.City = _City;
					newProfileRS.State = _State;
					newProfileRS.School = _School;
					newProfileRS.IsCustomer = _IsCustomer;
					newProfileRS.OwnsSecretLetter = _OwnsSecretLetter;
					newProfileRS.OwnsShadow = _OwnsShadow;
					newProfileRS.OwnsEmpathy = _OwnsEmpathy;
					newProfileRS.ValidationId = _ValidationId;
					newProfileRS.LastActivityDate = _LastActivityDate;
					
          newProfileRS.IsDirty = _isDirty;
          newProfileRS.IsDeleted = _isDeleted;
          return newProfileRS; 
      }

      /// <summary>
      /// Sets the identity column.
      /// </summary>
      /// <param name="IdentityValue"></param>
		public void SetIdentity(Guid IdentityValue) {
			_UserId = IdentityValue;
		}

    } 
} 