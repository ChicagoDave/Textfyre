/*
 *  DO NOT EDIT THIS CLASS.
 * 
 *  This class is generated by a tool and should not be edited. If you need to change the functionality of 
 *  this class, you should discuss your changes with the team and they should be implemented in the
 *  appropriate template.
 *  
 */
using System;
using System.Data;
using System.Data.SqlClient;

namespace Textfyre.TextfyreWeb.DataLayer { 
    /// <summary>
    /// Factory class that auto-builds SqlParameters.
    /// </summary>
    [Serializable()]
    public class TransactionParameterFactory {
        /// <summary>
        /// GetParameter method returns a SqlParameter.
        /// </summary>
        public SqlParameter GetParameter(Textfyre.TextfyreWeb.DataLayer.TransactionFields FieldIdentity, object FieldValue) { 
            SqlParameter param = null;
            switch (FieldIdentity) {
				case TransactionFields.TransactionId:
					param = new SqlParameter("@TransactionId", SqlDbType.Int);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = false;
					param.SourceColumn = "TransactionId";
					break;
				case TransactionFields.PayerEmail:
					param = new SqlParameter("@PayerEmail", SqlDbType.NVarChar, 100);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "PayerEmail";
					break;
				case TransactionFields.EJTransactionId:
					param = new SqlParameter("@EJTransactionId", SqlDbType.NVarChar, 50);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "EJTransactionId";
					break;
				case TransactionFields.FirstName:
					param = new SqlParameter("@FirstName", SqlDbType.NVarChar, 20);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "FirstName";
					break;
				case TransactionFields.LastName:
					param = new SqlParameter("@LastName", SqlDbType.NVarChar, 30);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "LastName";
					break;
				case TransactionFields.MCGross:
					param = new SqlParameter("@MCGross", SqlDbType.Money);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "MCGross";
					break;
				case TransactionFields.Shipping:
					param = new SqlParameter("@Shipping", SqlDbType.Money);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "Shipping";
					break;
				case TransactionFields.Tax:
					param = new SqlParameter("@Tax", SqlDbType.Money);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "Tax";
					break;
				case TransactionFields.InvoiceId:
					param = new SqlParameter("@InvoiceId", SqlDbType.NVarChar, 50);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "InvoiceId";
					break;
				case TransactionFields.Street:
					param = new SqlParameter("@Street", SqlDbType.NVarChar, 50);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "Street";
					break;
				case TransactionFields.City:
					param = new SqlParameter("@City", SqlDbType.NVarChar, 20);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "City";
					break;
				case TransactionFields.State:
					param = new SqlParameter("@State", SqlDbType.Char, 2);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "State";
					break;
				case TransactionFields.ZipCode:
					param = new SqlParameter("@ZipCode", SqlDbType.Char, 10);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "ZipCode";
					break;
				case TransactionFields.CountryCode:
					param = new SqlParameter("@CountryCode", SqlDbType.Char, 2);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "CountryCode";
					break;
				case TransactionFields.Phone:
					param = new SqlParameter("@Phone", SqlDbType.Char, 15);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "Phone";
					break;
				case TransactionFields.PayerPhone:
					param = new SqlParameter("@PayerPhone", SqlDbType.Char, 15);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "PayerPhone";
					break;
            }

            if(param == null)
                throw new Exception("Unknown parameter identifier.");

            return param;
        }
    }
}