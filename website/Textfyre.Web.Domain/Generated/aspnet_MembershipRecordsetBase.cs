/*
 *  DO NOT EDIT THIS CLASS.
 * 
 *  This class is generated by a tool and should not be edited. If you need to change the functionality of 
 *  this class, you should discuss your changes with the team and they should be implemented in the
 *  appropriate template.
 *  
 */
using System;

namespace Textfyre.TextfyreWeb.BusinessLayer {   
    /// <summary>
    /// aspnet_MembershipRecordsetBase class.
    /// </summary>
    [Serializable()]
    public abstract class aspnet_MembershipRecordsetBase { 
      #region Members

			/// <summary>
			/// ApplicationId field.
			/// </summary>
			private Guid _ApplicationId = Guid.Empty;
			/// <summary>
			/// UserId field.
			/// </summary>
			private Guid _UserId = Guid.Empty;
			/// <summary>
			/// Password field.
			/// </summary>
			private string _Password;
			/// <summary>
			/// PasswordFormat field.
			/// </summary>
			private Int32 _PasswordFormat;
			/// <summary>
			/// PasswordSalt field.
			/// </summary>
			private string _PasswordSalt;
			/// <summary>
			/// MobilePIN field.
			/// </summary>
			private string _MobilePIN;
			/// <summary>
			/// Email field.
			/// </summary>
			private string _Email;
			/// <summary>
			/// LoweredEmail field.
			/// </summary>
			private string _LoweredEmail;
			/// <summary>
			/// PasswordQuestion field.
			/// </summary>
			private string _PasswordQuestion;
			/// <summary>
			/// PasswordAnswer field.
			/// </summary>
			private string _PasswordAnswer;
			/// <summary>
			/// IsApproved field.
			/// </summary>
			private bool _IsApproved;
			/// <summary>
			/// IsLockedOut field.
			/// </summary>
			private bool _IsLockedOut;
			/// <summary>
			/// CreateDate field.
			/// </summary>
			private DateTime _CreateDate;
			/// <summary>
			/// LastLoginDate field.
			/// </summary>
			private DateTime _LastLoginDate;
			/// <summary>
			/// LastPasswordChangedDate field.
			/// </summary>
			private DateTime _LastPasswordChangedDate;
			/// <summary>
			/// LastLockoutDate field.
			/// </summary>
			private DateTime _LastLockoutDate;
			/// <summary>
			/// FailedPasswordAttemptCount field.
			/// </summary>
			private Int32 _FailedPasswordAttemptCount;
			/// <summary>
			/// FailedPasswordAttemptWindowStart field.
			/// </summary>
			private DateTime _FailedPasswordAttemptWindowStart;
			/// <summary>
			/// FailedPasswordAnswerAttemptCount field.
			/// </summary>
			private Int32 _FailedPasswordAnswerAttemptCount;
			/// <summary>
			/// FailedPasswordAnswerAttemptWindowStart field.
			/// </summary>
			private DateTime _FailedPasswordAnswerAttemptWindowStart;
			/// <summary>
			/// Comment field.
			/// </summary>
			private string _Comment;
      /// <summary>
      /// _isDirty field.
      /// </summary>
      private bool _isDirty = false;
      /// <summary>
      /// _isDeleted field.
      /// </summary>
      private bool _isDeleted = false;
      /// <summary>
      /// _isInserted field.
      /// </summary>
      private bool _isInserted = false;
      #endregion 

      #region Properties
        

		public Guid ApplicationId {
			get { return _ApplicationId; }
			set {
				if(_ApplicationId != value) {
					_isDirty = true;
					_ApplicationId = value;
				}
			}
		}

		public Guid UserId {
			get { return _UserId; }
			set {
				if(_UserId != value) {
					_isDirty = true;
					_UserId = value;
				}
			}
		}

		public string Password {
			get { return _Password; }
			set {
				if(_Password != value) {
					_isDirty = true;
					_Password = value;
				}
			}
		}

		public Int32 PasswordFormat {
			get { return _PasswordFormat; }
			set {
				if(_PasswordFormat != value) {
					_isDirty = true;
					_PasswordFormat = value;
				}
			}
		}

		public string PasswordSalt {
			get { return _PasswordSalt; }
			set {
				if(_PasswordSalt != value) {
					_isDirty = true;
					_PasswordSalt = value;
				}
			}
		}

		public string MobilePIN {
			get { return _MobilePIN; }
			set {
				if(_MobilePIN != value) {
					_isDirty = true;
					_MobilePIN = value;
				}
			}
		}

		public string Email {
			get { return _Email; }
			set {
				if(_Email != value) {
					_isDirty = true;
					_Email = value;
				}
			}
		}

		public string LoweredEmail {
			get { return _LoweredEmail; }
			set {
				if(_LoweredEmail != value) {
					_isDirty = true;
					_LoweredEmail = value;
				}
			}
		}

		public string PasswordQuestion {
			get { return _PasswordQuestion; }
			set {
				if(_PasswordQuestion != value) {
					_isDirty = true;
					_PasswordQuestion = value;
				}
			}
		}

		public string PasswordAnswer {
			get { return _PasswordAnswer; }
			set {
				if(_PasswordAnswer != value) {
					_isDirty = true;
					_PasswordAnswer = value;
				}
			}
		}

		public bool IsApproved {
			get { return _IsApproved; }
			set {
				if(_IsApproved != value) {
					_isDirty = true;
					_IsApproved = value;
				}
			}
		}

		public bool IsLockedOut {
			get { return _IsLockedOut; }
			set {
				if(_IsLockedOut != value) {
					_isDirty = true;
					_IsLockedOut = value;
				}
			}
		}

		public DateTime CreateDate {
			get { return _CreateDate; }
			set {
				if(_CreateDate != value) {
					_isDirty = true;
					_CreateDate = value;
				}
			}
		}

		public DateTime LastLoginDate {
			get { return _LastLoginDate; }
			set {
				if(_LastLoginDate != value) {
					_isDirty = true;
					_LastLoginDate = value;
				}
			}
		}

		public DateTime LastPasswordChangedDate {
			get { return _LastPasswordChangedDate; }
			set {
				if(_LastPasswordChangedDate != value) {
					_isDirty = true;
					_LastPasswordChangedDate = value;
				}
			}
		}

		public DateTime LastLockoutDate {
			get { return _LastLockoutDate; }
			set {
				if(_LastLockoutDate != value) {
					_isDirty = true;
					_LastLockoutDate = value;
				}
			}
		}

		public Int32 FailedPasswordAttemptCount {
			get { return _FailedPasswordAttemptCount; }
			set {
				if(_FailedPasswordAttemptCount != value) {
					_isDirty = true;
					_FailedPasswordAttemptCount = value;
				}
			}
		}

		public DateTime FailedPasswordAttemptWindowStart {
			get { return _FailedPasswordAttemptWindowStart; }
			set {
				if(_FailedPasswordAttemptWindowStart != value) {
					_isDirty = true;
					_FailedPasswordAttemptWindowStart = value;
				}
			}
		}

		public Int32 FailedPasswordAnswerAttemptCount {
			get { return _FailedPasswordAnswerAttemptCount; }
			set {
				if(_FailedPasswordAnswerAttemptCount != value) {
					_isDirty = true;
					_FailedPasswordAnswerAttemptCount = value;
				}
			}
		}

		public DateTime FailedPasswordAnswerAttemptWindowStart {
			get { return _FailedPasswordAnswerAttemptWindowStart; }
			set {
				if(_FailedPasswordAnswerAttemptWindowStart != value) {
					_isDirty = true;
					_FailedPasswordAnswerAttemptWindowStart = value;
				}
			}
		}

		public string Comment {
			get { return _Comment; }
			set {
				if(_Comment != value) {
					_isDirty = true;
					_Comment = value;
				}
			}
		}

        
      /// <summary>
      /// Flag for when recordset data has changed.
      /// </summary>
      public bool IsDirty { 
          get { return _isDirty; } 
          set { _isDirty = value; } 
      } 
        
      /// <summary>
      /// Delete flag.
      /// </summary>
      public bool IsDeleted { 
          get { return _isDeleted; } 
          set { _isDeleted = value; } 
      }

      /// <summary>
      /// Insert flag for composite keys only.
      /// </summary>
      public bool IsInserted {
          get { return _isInserted; }
          set { _isInserted = value; }
      }
        
      #endregion 
        
      /// <summary>
      /// Empty constructor.
      /// </summary>
      public aspnet_MembershipRecordsetBase() {
      } 

      /// <summary>
      /// Returns a new instance of the current recordset.
      /// </summary>
      /// <returns></returns>
      public virtual aspnet_MembershipRecordset Clone() {
          aspnet_MembershipRecordset newaspnet_MembershipRS = new aspnet_MembershipRecordset(); 
          newaspnet_MembershipRS.ApplicationId = _ApplicationId;
					newaspnet_MembershipRS.UserId = _UserId;
					newaspnet_MembershipRS.Password = _Password;
					newaspnet_MembershipRS.PasswordFormat = _PasswordFormat;
					newaspnet_MembershipRS.PasswordSalt = _PasswordSalt;
					newaspnet_MembershipRS.MobilePIN = _MobilePIN;
					newaspnet_MembershipRS.Email = _Email;
					newaspnet_MembershipRS.LoweredEmail = _LoweredEmail;
					newaspnet_MembershipRS.PasswordQuestion = _PasswordQuestion;
					newaspnet_MembershipRS.PasswordAnswer = _PasswordAnswer;
					newaspnet_MembershipRS.IsApproved = _IsApproved;
					newaspnet_MembershipRS.IsLockedOut = _IsLockedOut;
					newaspnet_MembershipRS.CreateDate = _CreateDate;
					newaspnet_MembershipRS.LastLoginDate = _LastLoginDate;
					newaspnet_MembershipRS.LastPasswordChangedDate = _LastPasswordChangedDate;
					newaspnet_MembershipRS.LastLockoutDate = _LastLockoutDate;
					newaspnet_MembershipRS.FailedPasswordAttemptCount = _FailedPasswordAttemptCount;
					newaspnet_MembershipRS.FailedPasswordAttemptWindowStart = _FailedPasswordAttemptWindowStart;
					newaspnet_MembershipRS.FailedPasswordAnswerAttemptCount = _FailedPasswordAnswerAttemptCount;
					newaspnet_MembershipRS.FailedPasswordAnswerAttemptWindowStart = _FailedPasswordAnswerAttemptWindowStart;
					newaspnet_MembershipRS.Comment = _Comment;
					
          newaspnet_MembershipRS.IsDirty = _isDirty;
          newaspnet_MembershipRS.IsDeleted = _isDeleted;
          return newaspnet_MembershipRS; 
      }

      /// <summary>
      /// Sets the identity column.
      /// </summary>
      /// <param name="IdentityValue"></param>
		public void SetIdentity(Guid IdentityValue) {
			_UserId = IdentityValue;
		}

    } 
} 