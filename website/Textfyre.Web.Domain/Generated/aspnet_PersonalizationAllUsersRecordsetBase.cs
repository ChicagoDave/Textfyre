/*
 *  DO NOT EDIT THIS CLASS.
 * 
 *  This class is generated by a tool and should not be edited. If you need to change the functionality of 
 *  this class, you should discuss your changes with the team and they should be implemented in the
 *  appropriate template.
 *  
 */
using System;

namespace Textfyre.TextfyreWeb.BusinessLayer {   
    /// <summary>
    /// aspnet_PersonalizationAllUsersRecordsetBase class.
    /// </summary>
    [Serializable()]
    public abstract class aspnet_PersonalizationAllUsersRecordsetBase { 
      #region Members

			/// <summary>
			/// PathId field.
			/// </summary>
			private Guid _PathId = Guid.Empty;
			/// <summary>
			/// PageSettings field.
			/// </summary>
			private byte[] _PageSettings;
			/// <summary>
			/// LastUpdatedDate field.
			/// </summary>
			private DateTime _LastUpdatedDate;
      /// <summary>
      /// _isDirty field.
      /// </summary>
      private bool _isDirty = false;
      /// <summary>
      /// _isDeleted field.
      /// </summary>
      private bool _isDeleted = false;
      /// <summary>
      /// _isInserted field.
      /// </summary>
      private bool _isInserted = false;
      #endregion 

      #region Properties
        

		public Guid PathId {
			get { return _PathId; }
			set {
				if(_PathId != value) {
					_isDirty = true;
					_PathId = value;
				}
			}
		}

		public byte[] PageSettings {
			get { return _PageSettings; }
			set {
				if(_PageSettings != value) {
					_isDirty = true;
					_PageSettings = value;
				}
			}
		}

		public DateTime LastUpdatedDate {
			get { return _LastUpdatedDate; }
			set {
				if(_LastUpdatedDate != value) {
					_isDirty = true;
					_LastUpdatedDate = value;
				}
			}
		}

        
      /// <summary>
      /// Flag for when recordset data has changed.
      /// </summary>
      public bool IsDirty { 
          get { return _isDirty; } 
          set { _isDirty = value; } 
      } 
        
      /// <summary>
      /// Delete flag.
      /// </summary>
      public bool IsDeleted { 
          get { return _isDeleted; } 
          set { _isDeleted = value; } 
      }

      /// <summary>
      /// Insert flag for composite keys only.
      /// </summary>
      public bool IsInserted {
          get { return _isInserted; }
          set { _isInserted = value; }
      }
        
      #endregion 
        
      /// <summary>
      /// Empty constructor.
      /// </summary>
      public aspnet_PersonalizationAllUsersRecordsetBase() {
      } 

      /// <summary>
      /// Returns a new instance of the current recordset.
      /// </summary>
      /// <returns></returns>
      public virtual aspnet_PersonalizationAllUsersRecordset Clone() {
          aspnet_PersonalizationAllUsersRecordset newaspnet_PersonalizationAllUsersRS = new aspnet_PersonalizationAllUsersRecordset(); 
          newaspnet_PersonalizationAllUsersRS.PathId = _PathId;
					newaspnet_PersonalizationAllUsersRS.PageSettings = _PageSettings;
					newaspnet_PersonalizationAllUsersRS.LastUpdatedDate = _LastUpdatedDate;
					
          newaspnet_PersonalizationAllUsersRS.IsDirty = _isDirty;
          newaspnet_PersonalizationAllUsersRS.IsDeleted = _isDeleted;
          return newaspnet_PersonalizationAllUsersRS; 
      }

      /// <summary>
      /// Sets the identity column.
      /// </summary>
      /// <param name="IdentityValue"></param>
		public void SetIdentity(Guid IdentityValue) {
			_PathId = IdentityValue;
		}

    } 
} 