/*
 *  DO NOT EDIT THIS CLASS.
 * 
 *  This class is generated by a tool and should not be edited. If you need to change the functionality of 
 *  this class, you should discuss your changes with the team and they should be implemented in the
 *  appropriate template.
 *  
 */
using System;
using System.Data;
using System.Data.SqlClient;

namespace Textfyre.TextfyreWeb.DataLayer { 
    /// <summary>
    /// Factory class that auto-builds SqlParameters.
    /// </summary>
    [Serializable()]
    public class aspnet_WebEvent_EventsParameterFactory {
        /// <summary>
        /// GetParameter method returns a SqlParameter.
        /// </summary>
        public SqlParameter GetParameter(Textfyre.TextfyreWeb.DataLayer.aspnet_WebEvent_EventsFields FieldIdentity, object FieldValue) { 
            SqlParameter param = null;
            switch (FieldIdentity) {
				case aspnet_WebEvent_EventsFields.EventId:
					param = new SqlParameter("@EventId", SqlDbType.Char, 32);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = false;
					param.SourceColumn = "EventId";
					break;
				case aspnet_WebEvent_EventsFields.EventTimeUtc:
					param = new SqlParameter("@EventTimeUtc", SqlDbType.DateTime);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = false;
					param.SourceColumn = "EventTimeUtc";
					break;
				case aspnet_WebEvent_EventsFields.EventTime:
					param = new SqlParameter("@EventTime", SqlDbType.DateTime);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = false;
					param.SourceColumn = "EventTime";
					break;
				case aspnet_WebEvent_EventsFields.EventType:
					param = new SqlParameter("@EventType", SqlDbType.NVarChar, 256);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = false;
					param.SourceColumn = "EventType";
					break;
				case aspnet_WebEvent_EventsFields.EventSequence:
					param = new SqlParameter("@EventSequence", SqlDbType.Decimal);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = false;
					param.SourceColumn = "EventSequence";
					break;
				case aspnet_WebEvent_EventsFields.EventOccurrence:
					param = new SqlParameter("@EventOccurrence", SqlDbType.Decimal);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = false;
					param.SourceColumn = "EventOccurrence";
					break;
				case aspnet_WebEvent_EventsFields.EventCode:
					param = new SqlParameter("@EventCode", SqlDbType.Int);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = false;
					param.SourceColumn = "EventCode";
					break;
				case aspnet_WebEvent_EventsFields.EventDetailCode:
					param = new SqlParameter("@EventDetailCode", SqlDbType.Int);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = false;
					param.SourceColumn = "EventDetailCode";
					break;
				case aspnet_WebEvent_EventsFields.Message:
					param = new SqlParameter("@Message", SqlDbType.NVarChar, 1024);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "Message";
					break;
				case aspnet_WebEvent_EventsFields.ApplicationPath:
					param = new SqlParameter("@ApplicationPath", SqlDbType.NVarChar, 256);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "ApplicationPath";
					break;
				case aspnet_WebEvent_EventsFields.ApplicationVirtualPath:
					param = new SqlParameter("@ApplicationVirtualPath", SqlDbType.NVarChar, 256);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "ApplicationVirtualPath";
					break;
				case aspnet_WebEvent_EventsFields.MachineName:
					param = new SqlParameter("@MachineName", SqlDbType.NVarChar, 256);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = false;
					param.SourceColumn = "MachineName";
					break;
				case aspnet_WebEvent_EventsFields.RequestUrl:
					param = new SqlParameter("@RequestUrl", SqlDbType.NVarChar, 1024);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "RequestUrl";
					break;
				case aspnet_WebEvent_EventsFields.ExceptionType:
					param = new SqlParameter("@ExceptionType", SqlDbType.NVarChar, 256);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "ExceptionType";
					break;
				case aspnet_WebEvent_EventsFields.Details:
					param = new SqlParameter("@Details", SqlDbType.NText, 1073741823);
					param.Value = FieldValue;
					param.Direction = ParameterDirection.Input;
					param.IsNullable = true;
					param.SourceColumn = "Details";
					break;
            }

            if(param == null)
                throw new Exception("Unknown parameter identifier.");

            return param;
        }
    }
}