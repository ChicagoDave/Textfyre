@model Zifmia.Model.ZifmiaViewModel
@using Zifmia.Model

@{
    ZifmiaChannel location = (from ZifmiaChannel ch in Model.Channels where ch.Name == "LOCN" select ch).FirstOrDefault<ZifmiaChannel>();

    string gameKey = Model.Game.Key;
}
<!DOCTYPE html>
<html>
<head>
    <title>Textfyre Adaptive Learning Entertainment: Interactive Stories, Puzzles, and Brain
        Teasers</title>
    <link href="@Url.Content("~/Scripts/themes/base/jquery.ui.all.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.7.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui-1.8.16.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/ui/jquery.ui.core.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/ui/jquery.ui.widget.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/ui/jquery.ui.tabs.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/cookies.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/utility.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.bpopup-0.5.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/utility.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/zifmia-htmlformatting.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/zifmia.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/game.js")" type="text/javascript"></script>

@{
    var host = Url.Content("~/");
    var imageRoot = Url.Content("~/Content/");
}

    <script type="text/javascript">

        var SessionSend = "@host" + "/Session/{0}/{1}";

        $(document).ready(function () {
            $('#anyKey').keydown(function () {
                $('#page').unbind('keydown');

                $("#prologuePanel").hide();
                $("#mainPanel").show();
                $("#prologueButton").hide();
                $("#commandPanel").slideToggle(function () { });
                $("#userCommand").keydown(onCommandWorking);
                $("#userCommand").keypress(onCommandEnter);
                $("#userCommand").val("");
                $("#userCommand").focus();
                $('html, body').animate({ scrollTop: '0px' }, 800);
                $("#contentTitle").text("@location.Content");
                $("#mapButton").show();
                $("#hintsButton").show();
            });

            $("#mapButton").click(function () {
                $("#gameMap").bPopup();
            });

            $("#hintsButton").click(function () {
                $("#hintsBlock").bPopup();
            });

            $("#anyKey").focus();
            $('html, body').animate({ scrollTop: '0px' }, 800);
        });


        function onCommandWorking(e) {
            var command = $("#userCommand").val().trim();
            if (command == "" || (command.length == 1 && e.which == 8)) {
                $("#tutorial").show();
            }
        }

        function onCommandEnter(e) {
            var command = $("#userCommand").val().trim();
            if (e.which == 32 && command == "") {
                $("#userCommand").val("");
                $("#tutorial").show();
                return false;
            } else {
                $("#tutorial").hide();
            }
            if (e.which == 13) {
                handleCommand();
            }
        }

        function handleCommand() {
            var command = $("#userCommand").val().trim();

            //    this.sendCommand = function (ajaxImage, sessionKey, branchid, turn, command, callback, errorCallback) {

            var sessionKey = getCookie("@gameKey" + "_zifmiaSessionKey", null);
            var branchId = getCookie("@gameKey" + "_zifmiaBranchId", null);
            var turn = getCookie("@gameKey" + "_zifmiaTurn", null);

            zifmia.loadSessionData();
            zifmia.sendCommand("ajaxLoading", sessionKey, branchId, turn, command, handleSessionSend, handleSessionSendError);

            $("#userCommand").val("");
            $("#tutorial").show();
        }

        // 1. get data
        // 2. replace main content
        // 3. replace map content
        // 4. replace hints content
        // 5. replace tutorial content
        // 6. replace score content
        // 7. replace location content
        // 8. replace prompt content
        // 9. replace chapter content
        function handleSessionSend(zifmiaViewModel) {
            if (zifmiaViewModel != null) {

                game = new Game();
                game.loadChannelData(zifmiaViewModel.Channels);

                if (zifmiaViewModel.Status == -99) {
                    $("#commandPanel").slideToggle(function () { });
                    $("#mapButton").hide();
                    $("#hintsButton").hide();
                    $("#tutorial").hide();

                    //
                    // Reset game cookies to first turn, to avoid restart message.
                    //
                    setCookie("@gameKey" + "_zifmiaBranchId", "1");
                    setCookie("@gameKey" + "_zifmiaTurn", "1");
                }

                $("#mainParagraph").text(game.mainChannel);

                if ($("#mapImage").length != 0 && game.mapsChannel != null) {
                    $("#mapImage").attr("src", "@imageRoot" + game.mapsChannel);
                }
                setChannelContent("#hintsBlock", game.hintschannel);
                setChannelContent("#tutorialContent", game.tutorialChannel);
                setChannelContent("#contentTitle", game.locationChannel);

                if (zifmiaViewModel.Status != -99) {
                    // reset state. Turn is the only likely change here, branches can change.
                    setCookie("@gameKey" + "_zifmiaSessionKey", zifmiaViewModel.SessionKey);
                    setCookie("@gameKey" + "_zifmiaBranchId", zifmiaViewModel.BranchId);
                    setCookie("@gameKey" + "_zifmiaTurn", zifmiaViewModel.Turn);
                }
            }
        }

        function setChannelContent(element, content) {
            if ($(element).length != 0 && content != null) {
                $(element).text(content);
            }
        }

        function handleSessionSendError(xhr, textStatus, errorThrown) {
        }

        var skipToggle = 0;

        function toggleQuestion(answers) {

            var a = document.getElementById(answers.id);

            if (skipToggle == 0) {
                if (a.style.display == 'none') {
                    a.style.display = 'block';
                } else {
                    a.style.display = 'none';
                }
            }

            skipToggle = 0;
        }

        function showHint(mungedText, hintText) {
            mungedText.style.display = 'none';
            hintText.style.display = 'block';
            skipToggle = 1;
        }
    </script>
</head>
<body>
    @RenderBody()
</body>
</html>
